# Here we will build Node.js only, so keep it simple
language: node_js

cache:
  # Cache Node.js's "./node_modules" folder
  npm: true
  directories:
    # Cache SonarQube's folder
    - "$HOME/.sonar/cache"

env:
  global:
    # Standard container name (schema: project/application). Used to build the image and push it to the repo
    - CONTAINER_NAME="enterpriseflowsrepository/dashboard"
    # Short container tag. Contains major, monor & patch values
    # Example: 1.7.2
    - CONTAINER_TAG_SHORT=$(node -p "require('./package.json').version")
    # Short container tag. Contains major & monor values
    # Example: 1.7
    - CONTAINER_TAG_SHORTER=$(node -p "require('./package.json').version.split('.').splice(0, 2).join('.')")
    # Long container tag. Used to select an unique build version. Allow to quickly know the build date plus the referenced git commit
    # Example: 1.7.2-20191113211021-921103d
    - CONTAINER_TAG="$CONTAINER_TAG_SHORT-$(date +'%Y%m%d%H%M%S')-$(git rev-parse --short HEAD)"

services:
  # Display service needed for Chromium and the React.js test suite
  - xvfb
  # We will create containers here!
  - docker

addons:
  # Chromium is used to perform integration tests with React.js
  chrome: stable
  # Post build tests, quality and CVE detection by SonarQube
  sonarcloud:
    organization: enterpriseflowsrepository
    token:
      secure: elDsLWuzhpsyWm2IJs2fmg4OU8+HdRS7dDoX1PtBTwk/W1RV/u8l8Jw9hZMlLZqQ9/45JxJZjKSdGLyOx6L45rh+E5YsgfBnqGHeODXcDcIQZzkzYWo9mP8ehmDw7VI7A6T7GptE9JlNUJkb+r/CxVbD+I3CHkLbruBePVA1xlBtVWNA+I9vY2Z2bfrHbyOs52Hn6A87npcDBOkIFGiTek07jxfcOMWsyyRaaz/w6dPr1MuT/2KqXUhal6KrsykK0knryVR5q1hmP/fT6knBINAG6hhWej24pa7V9u7uHDCt19Pmf3amG+HJOfPnLcIIK5MXu6hYV0QmIvSZQacfQMw8GPpAVOoBqALtdf9/adEAK6FTk1JlB0FTxuESgDoNS+fLTrHBOxJ3RjrJzfIzaA/03YCcuerTRcAkTvRVB+MRhy/xmFfaLbExr512ZfwKJmsIEFzOUEfhYyCO7J9QadpzIL7AmquLiRKsowgY26DrjR3YKoWgZa0uOb0vrydhGRt6BThMcWTxzPe73iLSjcXYxpD3l6o6/ShnZkfWjeIMHpeJMp/SsG9Hw/4gqp12vFIfLXkC/gDaVXaBkGFDO/CUW2DgSi9ws9qOmp6+IgdKxYIu3moQKkf1ub/PBpH+0BC41o+KGTduT55cmT1DnNRSySOgfeYctRqIYekBMn0=
  apt:
    packages:
      # Force usage of the latest Docker version
      # See: https://docs.travis-ci.com/user/docker/#installing-a-newer-docker-version
      - docker-ce

before_install:
  - export CHROME_BIN=chromium-browser
  - export DISPLAY=:99.0

script:
  # Launch test jobs
  - npm test -- --maxWorkers=4
  # Hardcode the build versions to the app
  - printf "VERSION_SHORT=${CONTAINER_TAG_SHORT}\nVERSION=${CONTAINER_TAG}" > .env
  # Build the Node.js binaries
  - npm run build
  # Build the container
  - docker build -t $CONTAINER_NAME .
  # Launch SonarQube implementation then send the report to SonarCloud cloud platform
  - sonar-scanner

after_success:
  # Push the coverage report to Coveralls cloud platform
  - npm run coveralls

notifications:
  # Notify each build on Slack
  slack: enterpriseflo-sdf9244:I2PkD1iUs0lMR3Zon4ciy5zS

deploy:
  - provider: script
    script: bash docker_push.sh
    on:
      branch: dev
  - provider: script
    script: bash docker_push.sh stable
    on:
      branch: master
