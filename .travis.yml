# Here we will build Node.js only, so keep it simple
language: node_js

cache:
  # Cache Node.js's "./node_modules" folder
  npm: true
  directories:
  # Cache SonarQube's folder
  - "$HOME/.sonar/cache"

env:
  global:
  # Standard container name (schema: project/application). Used to build the image and push it to the repo
  - CONTAINER_NAME="enterpriseflowsrepository/dashboard"
  # Short container tag. Contains major, monor & patch values
  # Example: 1.7.2
  - CONTAINER_TAG_SHORT=$(node -p "require('./package.json').version")
  # Long container tag. Used to select an unique build version. Allow to quickly know the build date plus the referenced git commit
  # Example: 1.7.2-20191113211021-921103d
  - CONTAINER_TAG_FULL="$CONTAINER_TAG_SHORT-$(date +'%Y%m%d%H%M%S')-$(git rev-parse --short HEAD)"
  # CONTAINER_REPO_HUB_DOCKER_COM_USERNAME
  - secure: v7Sdq60HAPC+Z521/7oA9HTKT5CIDC0UWFvXBDi3vAoEvodwDhKEryWPKoFsQiNRJs4EUXtllPjHQVnlGNEFW0sG62HM/k4AxeJVDae8p7b1Ti3/XpzF2/4YUw+KBhW/Q0yAPJOZ29G+h9fxeNwVWa+SN6Vun/h3fwqjn502MwV4+YBAi9mLVJ0WLfJt19S9dr5gGdCl/VRstCk8owHbBHMSlO2vlgHfqFBx5iRXc0k0nLVDTNEUU/mFHOm8iXEQn6CgHXUb1gdm5AM1CYVVTJvF9+nndYNvXkS9ZBiIwvFV5PnflzQgqxDFJz9ZbLFe1RP8n3ZyOl5MAd9kv+iSG3+zjz4i2bT+VUL9awKrhQ2CM5UINLmYslW1lCv4fDGr6IIPpVoD+z8u/FX0ppQunoS3CypTSUkvyXoRQwoXgy5ortOaw9OfJG/3uEuYs3MXPyS4xCT6QS4IjG77YBmy7Hi8p+t9f9Tg4SIXprHJ5clem6j/wbt5EJaH8UO7cqL4YQtJNjiFSxdsYokHdnRKAKtfwiegovbbkgRtGhUiEYQubaN0gRO0O+xNZP/KYpCaU8WZ7tn2J2Z9AxN5l5JG9qo2AZ+2HI5wzy/Gfp3AdIt+koWmdO0dJEKPMw+pkufrr5t+hxhAwXhz0gkUXIAYLUJxxFFVExX+Kmef3jV9dVM=
  # CONTAINER_REPO_HUB_DOCKER_COM_PASSWORD
  - secure: iype3yaLuZRjWfwibZAZ2Kpk8p6JepSZGzwL4WNvwS7xDO5eDWwWTzSNKpT++3xTXAHMmFG+SWd1q7Gj0CoOgceDf2B7ssczA6Z6hXFLoZ9e86PI4unmUCguBorIX9jShxxLP6CrmcXaVYOunHdunhoidLdheHS/uvm76xN8q8XzkKG3d8ZHKM/JkQCyyVJfJ3Masp/eIUrSx8Lm+VkpcTMFFcFBUc2VMod5l0m0+GSrLSmh0ByAMWpzGeEhM0bK/JGjx7wOMcUaXfMnHIdLWy6UtgI0BoRdqpWsBAhdmaNkjARQEeCkiRmYlNo362bJ8LWqcJZqUSdEGP1Qsv2d+HDGP9y3palxxRVya/GcT7WcYNeOoubJmp3jE271QpoCzs3g7bRl3O63cezqnLaNGqyRxC19o/gwnGiNBX2FDeiv2TMg13K7RAWzIuYYFtDcaj0zGZS5un2uvY6niWilUZMbrbDO1Nw+aoOoKMWZiIe612DOgBbFxXMaZGo+vv8oxembBRcotNsRn3D2l2xC6zqyMZElSg7UCeROShAGAyJxEuPZ9XqFX3mAAj64Jso0WfmbBY1vTGFVMOCiR7IT3yqIQ1toemCvQexJ50fwhTa/p15h+r9wSN/kkj8zSnSZ56ZDLQ3cn/QvIHPUuYRtXqaqeb/4zRkJbln7XNFmpII=

services:
# Display service needed for Chromium and the React.js test suite
- xvfb
# We will create containers here!
- docker

addons:
  # Chromium is used to perform integration tests with React.js
  chrome: stable
  # Post build tests, quality and CVE detection by SonarQube
  sonarcloud:
    organization: enterpriseflowsrepository
    token:
      secure: elDsLWuzhpsyWm2IJs2fmg4OU8+HdRS7dDoX1PtBTwk/W1RV/u8l8Jw9hZMlLZqQ9/45JxJZjKSdGLyOx6L45rh+E5YsgfBnqGHeODXcDcIQZzkzYWo9mP8ehmDw7VI7A6T7GptE9JlNUJkb+r/CxVbD+I3CHkLbruBePVA1xlBtVWNA+I9vY2Z2bfrHbyOs52Hn6A87npcDBOkIFGiTek07jxfcOMWsyyRaaz/w6dPr1MuT/2KqXUhal6KrsykK0knryVR5q1hmP/fT6knBINAG6hhWej24pa7V9u7uHDCt19Pmf3amG+HJOfPnLcIIK5MXu6hYV0QmIvSZQacfQMw8GPpAVOoBqALtdf9/adEAK6FTk1JlB0FTxuESgDoNS+fLTrHBOxJ3RjrJzfIzaA/03YCcuerTRcAkTvRVB+MRhy/xmFfaLbExr512ZfwKJmsIEFzOUEfhYyCO7J9QadpzIL7AmquLiRKsowgY26DrjR3YKoWgZa0uOb0vrydhGRt6BThMcWTxzPe73iLSjcXYxpD3l6o6/ShnZkfWjeIMHpeJMp/SsG9Hw/4gqp12vFIfLXkC/gDaVXaBkGFDO/CUW2DgSi9ws9qOmp6+IgdKxYIu3moQKkf1ub/PBpH+0BC41o+KGTduT55cmT1DnNRSySOgfeYctRqIYekBMn0=
  apt:
    packages:
    # Force usage of the latest Docker version
    # See: https://docs.travis-ci.com/user/docker/#installing-a-newer-docker-version
    - docker-ce

before_install:
- export CHROME_BIN=chromium-browser
- export DISPLAY=:99.0

script:
# Launch test jobs
- npm test -- --maxWorkers=4
# Hardcode the build versions to the app
- printf "VERSION_SHORT=${CONTAINER_TAG_SHORT}\nVERSION=${CONTAINER_TAG_FULL}" > .env
# Build the Node.js binaries
- npm run build
# Build the container
- docker build -t $CONTAINER_NAME .

after_success:
# Push the coverage report to Coveralls cloud platform
- npm run coveralls
# Launch SonarQube implementation then send the report to SonarCloud cloud platform
- sonar-scanner

notifications:
  # Notify each build on Slack
  slack: enterpriseflowsrepo:I2PkD1iUs0lMR3Zon4ciy5zS

deploy:
# Push builds with default tags to "docker.io"
- provider: script
  script: bash scripts/container-push.sh
    -r docker.io
    -u $CONTAINER_REPO_HUB_DOCKER_COM_USERNAME
    -p $CONTAINER_REPO_HUB_DOCKER_COM_PASSWORD
    -i $CONTAINER_NAME
    -v $CONTAINER_TAG_SHORT
    -w $CONTAINER_TAG_FULL
    -a default
  on:
    all_branches: true
# Push builds with stable tags to "docker.io"
- provider: script
  script: bash scripts/container-push.sh
    -r docker.io
    -u $CONTAINER_REPO_HUB_DOCKER_COM_USERNAME
    -p $CONTAINER_REPO_HUB_DOCKER_COM_PASSWORD
    -i $CONTAINER_NAME
    -v $CONTAINER_TAG_SHORT
    -w $CONTAINER_TAG_FULL
    -a stable
  on:
    branch: master
