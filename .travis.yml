# Here we will build Node.js only, so keep it simple
language: node_js

cache:
  # Cache Node.js's "./node_modules" folder
  npm: true
  directories:
  # Cache SonarQube's folder
  - "$HOME/.sonar/cache"

env:
  global:
  # Standard container name (schema: project/application). Used to build the image and push it to the repo
  - CONTAINER_NAME="enterpriseflowsrepository/dashboard"
  # Short container tag. Contains major, monor & patch values
  # Example: 1.7.2
  - CONTAINER_TAG_SHORT=$(node -p "require('./package.json').version")
  # Long container tag. Used to select an unique build version. Allow to quickly know the build date plus the referenced git commit
  # Example: 1.7.2-20191113211021-921103d
  - CONTAINER_TAG_FULL="$CONTAINER_TAG_SHORT-$(date +'%Y%m%d%H%M%S')-$(git rev-parse --short HEAD)"
  # CONTAINER_REPO_HUB_DOCKER_COM_USERNAME
  - secure: xBcdiUj/3LAU/F01g8VfXwfihM8wr2bEMRwHIosmv0lxQNtm8guJUP3ivDowL2jQVG1LVMane/+UYjYb/jlrRHFQHoCMPMkXCu7HySknmGe4aE+aPCWhbIs517H21C5urhEdVZDkr0pYTzu8E//Zl5pBRFFaeVUiNeOGfmnRZibDOJVyfR1TEJUM5VdlfB3sQManxDSChsAkORh1Ty85wpgsskawkH5cbejYUB9KmiFcetNtl+BbLEx6TFOYX7T8pnI52ojQYGzpNUbQYCLzMy/RbMswybKuHN8vkUxEUbBHd1SPaTruvhYyiZJlVGnYc3khSUW/+S4pnI7apOowernT58xoTXjB7Uxwr9K09261/pGGCE/2Uu8Lut7HAVcWnDtx9EVL8tSx55ia9gCsIeoLxWXnuWIlXEbpAM/0hqEupBVvAF53+dhN101vGFoCgU8Ay0pqE7kv5R80gdS7VidAg+Dhpzt1+78Q/ibQ5IG5kXx6emKLkFuoshJG3ikJw2Yls9ldsfhrCvtI3v/mpQZCFO4iCZnmvicDiwRGA2br6ogSuYV7zH9YyWJEC5/zGbbfv7WKTtFM1ZccDSQRzmKM78saF3zNQ4mbaD7col58sI1W50LH/+/pIaem15FDRPWstULazROlzOqEIxdNeID3a+/RlK+dPyBOmXMnWHI=
  # CONTAINER_REPO_HUB_DOCKER_COM_PASSWORD
  - secure: DNRAsGufn9+NMaO+OQQgg6rAVbeqF7iHxDVvDKKEhVgw00F+Lc52JehxxSDAAEb+GTj+ydzaxxs20eROG6Ea3FlnOEjTtVYJfE8dk1sAMp2qOdKX8FAKJyGbTlP7wU1bUEXgX4QookU1CZylMSa7LpUTiPc+JLo/8AQhnDA8c8T5HyCHFR0vq616ppMcG5JFXcyVzsT2pChCqySUBaZwYEw+4vC7X1/h0Jc71gZiCfTTy1jwdtvm0R8FFjE9fI1iS7BITC8CgMu9+MJxKo4ABsnguWBr0jfsCD6ktsFhozuaCRjXE6JmDmvVeWIEYo0brZ/uPxyTJCOKngWXFw9+LNYfPPDL8llxstOE5nAq+lqdfAl+3wBM01eTetnbedNBk1AxxrHnnYL8/5ql5BwydaJzQSEcLi2I2PugenVOVKZmuR49iSbeUMuSEpnzYXXT84OoS7PpXfuNQsZVoxuAViSBLbE+hESedjm3dJ1JpnAmnOVHe6gUwh7ZJ5cdgQwZutlpDqbt6IwVgsiaRFagjiDzKJzp6V/zmXLNq2GD5FMCRcca9f2hmE3N6t0ll8bechzQbe3/SnPu9Zs6Y96piWeCe38UFsj1gMl//+d9l3sJz2aeCJwM1oo2ORR73u6PTZbZb3oeI32RLkmC7vE7H13buakCRQ9Pw/xzFFWbPl8=

services:
# Display service needed for Chromium and the React.js test suite
- xvfb
# We will create containers here!
- docker

addons:
  # Chromium is used to perform integration tests with React.js
  chrome: stable
  # Post build tests, quality and CVE detection by SonarQube
  sonarcloud:
    organization: enterpriseflowsrepository
    token:
      secure: elDsLWuzhpsyWm2IJs2fmg4OU8+HdRS7dDoX1PtBTwk/W1RV/u8l8Jw9hZMlLZqQ9/45JxJZjKSdGLyOx6L45rh+E5YsgfBnqGHeODXcDcIQZzkzYWo9mP8ehmDw7VI7A6T7GptE9JlNUJkb+r/CxVbD+I3CHkLbruBePVA1xlBtVWNA+I9vY2Z2bfrHbyOs52Hn6A87npcDBOkIFGiTek07jxfcOMWsyyRaaz/w6dPr1MuT/2KqXUhal6KrsykK0knryVR5q1hmP/fT6knBINAG6hhWej24pa7V9u7uHDCt19Pmf3amG+HJOfPnLcIIK5MXu6hYV0QmIvSZQacfQMw8GPpAVOoBqALtdf9/adEAK6FTk1JlB0FTxuESgDoNS+fLTrHBOxJ3RjrJzfIzaA/03YCcuerTRcAkTvRVB+MRhy/xmFfaLbExr512ZfwKJmsIEFzOUEfhYyCO7J9QadpzIL7AmquLiRKsowgY26DrjR3YKoWgZa0uOb0vrydhGRt6BThMcWTxzPe73iLSjcXYxpD3l6o6/ShnZkfWjeIMHpeJMp/SsG9Hw/4gqp12vFIfLXkC/gDaVXaBkGFDO/CUW2DgSi9ws9qOmp6+IgdKxYIu3moQKkf1ub/PBpH+0BC41o+KGTduT55cmT1DnNRSySOgfeYctRqIYekBMn0=
  apt:
    packages:
    # Force usage of the latest Docker version
    # See: https://docs.travis-ci.com/user/docker/#installing-a-newer-docker-version
    - docker-ce

before_install:
- export CHROME_BIN=chromium-browser
- export DISPLAY=:99.0

script:
# Launch test jobs
- npm test -- --maxWorkers=4
# Hardcode the build versions to the app
- printf "VERSION_SHORT=${CONTAINER_TAG_SHORT}\nVERSION=${CONTAINER_TAG_FULL}" > .env
# Build the Node.js binaries
- npm run build
# Build the container
- docker build -t $CONTAINER_NAME .

after_success:
# Push the coverage report to Coveralls cloud platform
- npm run coveralls
# Launch SonarQube implementation then send the report to SonarCloud cloud platform
- sonar-scanner

notifications:
  # Notify each build on Slack
  slack: enterpriseflowsrepo:I2PkD1iUs0lMR3Zon4ciy5zS

deploy:
# Push builds with default tags to "docker.io"
- provider: script
  script: bash scripts/container-push.sh
    -r docker.io
    -u $CONTAINER_REPO_HUB_DOCKER_COM_USERNAME
    -p $CONTAINER_REPO_HUB_DOCKER_COM_PASSWORD
    -i $CONTAINER_NAME
    -v $CONTAINER_TAG_SHORT
    -w $CONTAINER_TAG_FULL
    -a default
  on:
    all_branches: true
# Push builds with stable tags to "docker.io"
- provider: script
  script: bash scripts/container-push.sh
    -r docker.io
    -u $CONTAINER_REPO_HUB_DOCKER_COM_USERNAME
    -p $CONTAINER_REPO_HUB_DOCKER_COM_PASSWORD
    -i $CONTAINER_NAME
    -v $CONTAINER_TAG_SHORT
    -w $CONTAINER_TAG_FULL
    -a stable
  on:
    branch: master
